// Code generated by octo-cli/generator; DO NOT EDIT.

package generated

import internal "github.com/octo-cli/octo-cli/internal"

type BillingCmd struct {
	GetGithubActionsBillingGhe   BillingGetGithubActionsBillingGheCmd   `cmd:""`
	GetGithubActionsBillingOrg   BillingGetGithubActionsBillingOrgCmd   `cmd:""`
	GetGithubActionsBillingUser  BillingGetGithubActionsBillingUserCmd  `cmd:""`
	GetGithubPackagesBillingGhe  BillingGetGithubPackagesBillingGheCmd  `cmd:""`
	GetGithubPackagesBillingOrg  BillingGetGithubPackagesBillingOrgCmd  `cmd:""`
	GetGithubPackagesBillingUser BillingGetGithubPackagesBillingUserCmd `cmd:""`
	GetSharedStorageBillingGhe   BillingGetSharedStorageBillingGheCmd   `cmd:""`
	GetSharedStorageBillingOrg   BillingGetSharedStorageBillingOrgCmd   `cmd:""`
	GetSharedStorageBillingUser  BillingGetSharedStorageBillingUserCmd  `cmd:""`
}

type BillingGetGithubActionsBillingGheCmd struct {
	EnterpriseId int64 `name:"enterprise_id" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubActionsBillingGheCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/enterprises/{enterprise_id}/settings/billing/actions")
	c.UpdateURLPath("enterprise_id", c.EnterpriseId)
	return c.DoRequest("GET")
}

type BillingGetGithubActionsBillingOrgCmd struct {
	Org string `name:"org" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubActionsBillingOrgCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/orgs/{org}/settings/billing/actions")
	c.UpdateURLPath("org", c.Org)
	return c.DoRequest("GET")
}

type BillingGetGithubActionsBillingUserCmd struct {
	Username string `name:"username" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubActionsBillingUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/users/{username}/settings/billing/actions")
	c.UpdateURLPath("username", c.Username)
	return c.DoRequest("GET")
}

type BillingGetGithubPackagesBillingGheCmd struct {
	EnterpriseId int64 `name:"enterprise_id" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubPackagesBillingGheCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/enterprises/{enterprise_id}/settings/billing/packages")
	c.UpdateURLPath("enterprise_id", c.EnterpriseId)
	return c.DoRequest("GET")
}

type BillingGetGithubPackagesBillingOrgCmd struct {
	Org string `name:"org" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubPackagesBillingOrgCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/orgs/{org}/settings/billing/packages")
	c.UpdateURLPath("org", c.Org)
	return c.DoRequest("GET")
}

type BillingGetGithubPackagesBillingUserCmd struct {
	Username string `name:"username" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetGithubPackagesBillingUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/users/{username}/settings/billing/packages")
	c.UpdateURLPath("username", c.Username)
	return c.DoRequest("GET")
}

type BillingGetSharedStorageBillingGheCmd struct {
	EnterpriseId int64 `name:"enterprise_id" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetSharedStorageBillingGheCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/enterprises/{enterprise_id}/settings/billing/shared-storage")
	c.UpdateURLPath("enterprise_id", c.EnterpriseId)
	return c.DoRequest("GET")
}

type BillingGetSharedStorageBillingOrgCmd struct {
	Org string `name:"org" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetSharedStorageBillingOrgCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/orgs/{org}/settings/billing/shared-storage")
	c.UpdateURLPath("org", c.Org)
	return c.DoRequest("GET")
}

type BillingGetSharedStorageBillingUserCmd struct {
	Username string `name:"username" required:"true"`
	internal.BaseCmd
}

func (c *BillingGetSharedStorageBillingUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/users/{username}/settings/billing/shared-storage")
	c.UpdateURLPath("username", c.Username)
	return c.DoRequest("GET")
}
