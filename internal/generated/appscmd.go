// Code generated by octo-cli/generator; DO NOT EDIT.

package generated

import internal "github.com/octo-cli/octo-cli/internal"

type AppsCmd struct {
	AddRepoToInstallation                        AppsAddRepoToInstallationCmd                        `cmd:""`
	CheckAuthorization                           AppsCheckAuthorizationCmd                           `cmd:""`
	CheckToken                                   AppsCheckTokenCmd                                   `cmd:""`
	CreateContentAttachment                      AppsCreateContentAttachmentCmd                      `cmd:""`
	CreateFromManifest                           AppsCreateFromManifestCmd                           `cmd:""`
	CreateInstallationAccessToken                AppsCreateInstallationAccessTokenCmd                `cmd:""`
	DeleteAuthorization                          AppsDeleteAuthorizationCmd                          `cmd:""`
	DeleteInstallation                           AppsDeleteInstallationCmd                           `cmd:""`
	DeleteToken                                  AppsDeleteTokenCmd                                  `cmd:""`
	GetAuthenticated                             AppsGetAuthenticatedCmd                             `cmd:""`
	GetBySlug                                    AppsGetBySlugCmd                                    `cmd:""`
	GetInstallation                              AppsGetInstallationCmd                              `cmd:""`
	GetOrgInstallation                           AppsGetOrgInstallationCmd                           `cmd:""`
	GetRepoInstallation                          AppsGetRepoInstallationCmd                          `cmd:""`
	GetSubscriptionPlanForAccount                AppsGetSubscriptionPlanForAccountCmd                `cmd:""`
	GetSubscriptionPlanForAccountStubbed         AppsGetSubscriptionPlanForAccountStubbedCmd         `cmd:""`
	GetUserInstallation                          AppsGetUserInstallationCmd                          `cmd:""`
	ListAccountsForPlan                          AppsListAccountsForPlanCmd                          `cmd:""`
	ListAccountsForPlanStubbed                   AppsListAccountsForPlanStubbedCmd                   `cmd:""`
	ListInstallationReposForAuthenticatedUser    AppsListInstallationReposForAuthenticatedUserCmd    `cmd:""`
	ListInstallations                            AppsListInstallationsCmd                            `cmd:""`
	ListInstallationsForAuthenticatedUser        AppsListInstallationsForAuthenticatedUserCmd        `cmd:""`
	ListPlans                                    AppsListPlansCmd                                    `cmd:""`
	ListPlansStubbed                             AppsListPlansStubbedCmd                             `cmd:""`
	ListReposAccessibleToInstallation            AppsListReposAccessibleToInstallationCmd            `cmd:""`
	ListSubscriptionsForAuthenticatedUser        AppsListSubscriptionsForAuthenticatedUserCmd        `cmd:""`
	ListSubscriptionsForAuthenticatedUserStubbed AppsListSubscriptionsForAuthenticatedUserStubbedCmd `cmd:""`
	RemoveRepoFromInstallation                   AppsRemoveRepoFromInstallationCmd                   `cmd:""`
	ResetAuthorization                           AppsResetAuthorizationCmd                           `cmd:""`
	ResetToken                                   AppsResetTokenCmd                                   `cmd:""`
	RevokeAuthorizationForApplication            AppsRevokeAuthorizationForApplicationCmd            `cmd:""`
	RevokeGrantForApplication                    AppsRevokeGrantForApplicationCmd                    `cmd:""`
	RevokeInstallationAccessToken                AppsRevokeInstallationAccessTokenCmd                `cmd:""`
	SuspendInstallation                          AppsSuspendInstallationCmd                          `cmd:""`
	UnsuspendInstallation                        AppsUnsuspendInstallationCmd                        `cmd:""`
}

type AppsAddRepoToInstallationCmd struct {
	MachineMan     bool  `name:"machine-man-preview" required:"true"`
	InstallationId int64 `name:"installation_id" required:"true"`
	RepositoryId   int64 `name:"repository_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsAddRepoToInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/installations/{installation_id}/repositories/{repository_id}")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdateURLPath("repository_id", c.RepositoryId)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("PUT")
}

type AppsCheckAuthorizationCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsCheckAuthorizationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/tokens/{access_token}")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateURLPath("access_token", c.AccessToken)
	return c.DoRequest("GET")
}

type AppsCheckTokenCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsCheckTokenCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/token")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateBody("access_token", c.AccessToken)
	return c.DoRequest("POST")
}

type AppsCreateContentAttachmentCmd struct {
	Corsair            bool   `name:"corsair-preview" required:"true"`
	ContentReferenceId int64  `name:"content_reference_id" required:"true"`
	Body               string `name:"body" required:"true"`
	Title              string `name:"title" required:"true"`
	internal.BaseCmd
}

func (c *AppsCreateContentAttachmentCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/content_references/{content_reference_id}/attachments")
	c.UpdateURLPath("content_reference_id", c.ContentReferenceId)
	c.UpdatePreview("corsair", c.Corsair)
	c.UpdateBody("body", c.Body)
	c.UpdateBody("title", c.Title)
	return c.DoRequest("POST")
}

type AppsCreateFromManifestCmd struct {
	Code string `name:"code" required:"true"`
	internal.BaseCmd
}

func (c *AppsCreateFromManifestCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app-manifests/{code}/conversions")
	c.UpdateURLPath("code", c.Code)
	return c.DoRequest("POST")
}

type AppsCreateInstallationAccessTokenCmd struct {
	MachineMan             bool     `name:"machine-man-preview" required:"true"`
	InstallationId         int64    `name:"installation_id" required:"true"`
	PermissionsContents    string   `name:"permissions.contents"`
	PermissionsDefNotARepo string   `name:"permissions.def_not_a_repo"`
	PermissionsDeployments string   `name:"permissions.deployments"`
	PermissionsIssues      string   `name:"permissions.issues"`
	PermissionsSingleFile  string   `name:"permissions.single_file"`
	Repositories           []string `name:"repositories"`
	RepositoryIds          []int64  `name:"repository_ids"`
	internal.BaseCmd
}

func (c *AppsCreateInstallationAccessTokenCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations/{installation_id}/access_tokens")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdatePreview("machine-man", c.MachineMan)
	c.UpdateBody("permissions.contents", c.PermissionsContents)
	c.UpdateBody("permissions.def_not_a_repo", c.PermissionsDefNotARepo)
	c.UpdateBody("permissions.deployments", c.PermissionsDeployments)
	c.UpdateBody("permissions.issues", c.PermissionsIssues)
	c.UpdateBody("permissions.single_file", c.PermissionsSingleFile)
	c.UpdateBody("repositories", c.Repositories)
	c.UpdateBody("repository_ids", c.RepositoryIds)
	return c.DoRequest("POST")
}

type AppsDeleteAuthorizationCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token"`
	internal.BaseCmd
}

func (c *AppsDeleteAuthorizationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/grant")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateBody("access_token", c.AccessToken)
	return c.DoRequest("DELETE")
}

type AppsDeleteInstallationCmd struct {
	MachineMan     bool  `name:"machine-man-preview" required:"true"`
	InstallationId int64 `name:"installation_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsDeleteInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations/{installation_id}")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("DELETE")
}

type AppsDeleteTokenCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token"`
	internal.BaseCmd
}

func (c *AppsDeleteTokenCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/token")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateBody("access_token", c.AccessToken)
	return c.DoRequest("DELETE")
}

type AppsGetAuthenticatedCmd struct {
	MachineMan bool `name:"machine-man-preview" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetAuthenticatedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app")
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsGetBySlugCmd struct {
	MachineMan bool   `name:"machine-man-preview" required:"true"`
	AppSlug    string `name:"app_slug" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetBySlugCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/apps/{app_slug}")
	c.UpdateURLPath("app_slug", c.AppSlug)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsGetInstallationCmd struct {
	MachineMan     bool  `name:"machine-man-preview" required:"true"`
	InstallationId int64 `name:"installation_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations/{installation_id}")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsGetOrgInstallationCmd struct {
	MachineMan bool   `name:"machine-man-preview" required:"true"`
	Org        string `name:"org" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetOrgInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/orgs/{org}/installation")
	c.UpdateURLPath("org", c.Org)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsGetRepoInstallationCmd struct {
	MachineMan bool   `name:"machine-man-preview" required:"true"`
	Repo       string `name:"repo" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetRepoInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/{repo}/installation")
	c.UpdateURLPath("repo", c.Repo)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsGetSubscriptionPlanForAccountCmd struct {
	AccountId int64 `name:"account_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetSubscriptionPlanForAccountCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/accounts/{account_id}")
	c.UpdateURLPath("account_id", c.AccountId)
	return c.DoRequest("GET")
}

type AppsGetSubscriptionPlanForAccountStubbedCmd struct {
	AccountId int64 `name:"account_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetSubscriptionPlanForAccountStubbedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/stubbed/accounts/{account_id}")
	c.UpdateURLPath("account_id", c.AccountId)
	return c.DoRequest("GET")
}

type AppsGetUserInstallationCmd struct {
	MachineMan bool   `name:"machine-man-preview" required:"true"`
	Username   string `name:"username" required:"true"`
	internal.BaseCmd
}

func (c *AppsGetUserInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/users/{username}/installation")
	c.UpdateURLPath("username", c.Username)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsListAccountsForPlanCmd struct {
	PlanId    int64  `name:"plan_id" required:"true"`
	Direction string `name:"direction"`
	Page      int64  `name:"page"`
	PerPage   int64  `name:"per_page"`
	Sort      string `name:"sort"`
	internal.BaseCmd
}

func (c *AppsListAccountsForPlanCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/plans/{plan_id}/accounts")
	c.UpdateURLPath("plan_id", c.PlanId)
	c.UpdateURLQuery("sort", c.Sort)
	c.UpdateURLQuery("direction", c.Direction)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsListAccountsForPlanStubbedCmd struct {
	PlanId    int64  `name:"plan_id" required:"true"`
	Direction string `name:"direction"`
	Page      int64  `name:"page"`
	PerPage   int64  `name:"per_page"`
	Sort      string `name:"sort"`
	internal.BaseCmd
}

func (c *AppsListAccountsForPlanStubbedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/stubbed/plans/{plan_id}/accounts")
	c.UpdateURLPath("plan_id", c.PlanId)
	c.UpdateURLQuery("sort", c.Sort)
	c.UpdateURLQuery("direction", c.Direction)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsListInstallationReposForAuthenticatedUserCmd struct {
	Mercy          bool  `name:"mercy-preview"`
	MachineMan     bool  `name:"machine-man-preview" required:"true"`
	InstallationId int64 `name:"installation_id" required:"true"`
	Page           int64 `name:"page"`
	PerPage        int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListInstallationReposForAuthenticatedUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/installations/{installation_id}/repositories")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	c.UpdatePreview("machine-man", c.MachineMan)
	c.UpdatePreview("mercy", c.Mercy)
	return c.DoRequest("GET")
}

type AppsListInstallationsCmd struct {
	MachineMan bool   `name:"machine-man-preview" required:"true"`
	Outdated   string `name:"outdated"`
	Page       int64  `name:"page"`
	PerPage    int64  `name:"per_page"`
	Since      string `name:"since"`
	internal.BaseCmd
}

func (c *AppsListInstallationsCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("since", c.Since)
	c.UpdateURLQuery("outdated", c.Outdated)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsListInstallationsForAuthenticatedUserCmd struct {
	MachineMan bool  `name:"machine-man-preview" required:"true"`
	Page       int64 `name:"page"`
	PerPage    int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListInstallationsForAuthenticatedUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/installations")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("GET")
}

type AppsListPlansCmd struct {
	Page    int64 `name:"page"`
	PerPage int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListPlansCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/plans")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsListPlansStubbedCmd struct {
	Page    int64 `name:"page"`
	PerPage int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListPlansStubbedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/marketplace_listing/stubbed/plans")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsListReposAccessibleToInstallationCmd struct {
	Mercy      bool  `name:"mercy-preview"`
	MachineMan bool  `name:"machine-man-preview" required:"true"`
	Page       int64 `name:"page"`
	PerPage    int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListReposAccessibleToInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/installation/repositories")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	c.UpdatePreview("machine-man", c.MachineMan)
	c.UpdatePreview("mercy", c.Mercy)
	return c.DoRequest("GET")
}

type AppsListSubscriptionsForAuthenticatedUserCmd struct {
	Page    int64 `name:"page"`
	PerPage int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListSubscriptionsForAuthenticatedUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/marketplace_purchases")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsListSubscriptionsForAuthenticatedUserStubbedCmd struct {
	Page    int64 `name:"page"`
	PerPage int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *AppsListSubscriptionsForAuthenticatedUserStubbedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/marketplace_purchases/stubbed")
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("page", c.Page)
	return c.DoRequest("GET")
}

type AppsRemoveRepoFromInstallationCmd struct {
	MachineMan     bool  `name:"machine-man-preview" required:"true"`
	InstallationId int64 `name:"installation_id" required:"true"`
	RepositoryId   int64 `name:"repository_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsRemoveRepoFromInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/user/installations/{installation_id}/repositories/{repository_id}")
	c.UpdateURLPath("installation_id", c.InstallationId)
	c.UpdateURLPath("repository_id", c.RepositoryId)
	c.UpdatePreview("machine-man", c.MachineMan)
	return c.DoRequest("DELETE")
}

type AppsResetAuthorizationCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsResetAuthorizationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/tokens/{access_token}")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateURLPath("access_token", c.AccessToken)
	return c.DoRequest("POST")
}

type AppsResetTokenCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsResetTokenCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/token")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateBody("access_token", c.AccessToken)
	return c.DoRequest("PATCH")
}

type AppsRevokeAuthorizationForApplicationCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsRevokeAuthorizationForApplicationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/tokens/{access_token}")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateURLPath("access_token", c.AccessToken)
	return c.DoRequest("DELETE")
}

type AppsRevokeGrantForApplicationCmd struct {
	ClientId    string `name:"client_id" required:"true"`
	AccessToken string `name:"access_token" required:"true"`
	internal.BaseCmd
}

func (c *AppsRevokeGrantForApplicationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/applications/{client_id}/grants/{access_token}")
	c.UpdateURLPath("client_id", c.ClientId)
	c.UpdateURLPath("access_token", c.AccessToken)
	return c.DoRequest("DELETE")
}

type AppsRevokeInstallationAccessTokenCmd struct {
	internal.BaseCmd
}

func (c *AppsRevokeInstallationAccessTokenCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/installation/token")
	return c.DoRequest("DELETE")
}

type AppsSuspendInstallationCmd struct {
	InstallationId int64 `name:"installation_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsSuspendInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations/{installation_id}/suspended")
	c.UpdateURLPath("installation_id", c.InstallationId)
	return c.DoRequest("PUT")
}

type AppsUnsuspendInstallationCmd struct {
	InstallationId int64 `name:"installation_id" required:"true"`
	internal.BaseCmd
}

func (c *AppsUnsuspendInstallationCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/app/installations/{installation_id}/suspended")
	c.UpdateURLPath("installation_id", c.InstallationId)
	return c.DoRequest("DELETE")
}
