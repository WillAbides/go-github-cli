// Code generated by octo-cli/generator; DO NOT EDIT.

package generated

import internal "github.com/octo-cli/octo-cli/internal"

type LicensesCmd struct {
	Get                LicensesGetCmd                `cmd:""`
	GetAllCommonlyUsed LicensesGetAllCommonlyUsedCmd `cmd:""`
	GetForRepo         LicensesGetForRepoCmd         `cmd:""`
}

type LicensesGetAllCommonlyUsedCmd struct {
	Featured bool  `name:"featured"`
	PerPage  int64 `name:"per_page"`
	internal.BaseCmd
}

func (c *LicensesGetAllCommonlyUsedCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/licenses")
	c.UpdateURLQuery("featured", c.Featured)
	c.UpdateURLQuery("per_page", c.PerPage)
	return c.DoRequest("GET")
}

type LicensesGetCmd struct {
	License string `name:"license" required:"true"`
	internal.BaseCmd
}

func (c *LicensesGetCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/licenses/{license}")
	c.UpdateURLPath("license", c.License)
	return c.DoRequest("GET")
}

type LicensesGetForRepoCmd struct {
	Repo string `name:"repo" required:"true"`
	internal.BaseCmd
}

func (c *LicensesGetForRepoCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/{repo}/license")
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("GET")
}
